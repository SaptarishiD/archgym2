<document source="/home/shreyas/Documents/HUVJR/oss-arch-gym/docs/source/arch_gym.envs.rst" xmlns:c="https://www.sphinx-doc.org/" xmlns:changeset="https://www.sphinx-doc.org/" xmlns:citation="https://www.sphinx-doc.org/" xmlns:cpp="https://www.sphinx-doc.org/" xmlns:index="https://www.sphinx-doc.org/" xmlns:js="https://www.sphinx-doc.org/" xmlns:math="https://www.sphinx-doc.org/" xmlns:py="https://www.sphinx-doc.org/" xmlns:rst="https://www.sphinx-doc.org/" xmlns:std="https://www.sphinx-doc.org/" xmlns:todo="https://www.sphinx-doc.org/">
    <section ids="arch-gym-envs-package" names="arch_gym.envs\ package">
        <title>
            arch_gym.envs package
        <section ids="submodules" names="submodules">
            <title>
                Submodules
        <section ids="module-arch_gym.envs.AstraSimEnv arch-gym-envs-astrasimenv-module" names="arch_gym.envs.astrasimenv\ module">
            <title>
                arch_gym.envs.AstraSimEnv module
            <index entries="['pair',\ 'module;\ arch_gym.envs.AstraSimEnv',\ 'module-arch_gym.envs.AstraSimEnv',\ '',\ None]">
            <index entries="['single',\ 'AstraSimEnv\ (class\ in\ arch_gym.envs.AstraSimEnv)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AstraSimEnv" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv" class="" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv" module="arch_gym.envs.AstraSimEnv">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.AstraSimEnv.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        AstraSimEnv
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                rl_form
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                'random_walker'
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                max_steps
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                5
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                num_agents
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                1
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                reward_formulation
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                'None'
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                reward_scaling
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                1
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ attribute)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AstraSimEnv.action_space" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv action_space" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.action_space" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.action_space" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'calculate_reward()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.calculate_reward',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.calculate_reward()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv calculate_reward" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.calculate_reward" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.calculate_reward" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                calculate_reward
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        observations
                        <desc_content>
                    <index entries="['single',\ 'close()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.close',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.close()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv close" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.close" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.close" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                close
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Override close in your subclass to perform any necessary cleanup.
                            <paragraph>
                                Environments will automatically 
                                <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.close" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.close">
                                    <literal classes="xref py py-meth">
                                        close()
                                 themselves when
                                garbage collected or when the program exits.
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ attribute)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="AstraSimEnv.observation_space" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv observation_space" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.observation_space" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.observation_space" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'parse_result()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.parse_result',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.parse_result()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv parse_result" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.parse_result" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.parse_result" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                parse_result
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        file_name
                        <desc_content>
                    <index entries="['single',\ 'render()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.render',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.render()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv render" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.render" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.render" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                render
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        *
                                    <desc_sig_name classes="n n">
                                        args
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Tuple
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        **
                                    <desc_sig_name classes="n n">
                                        kwargs
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Dict
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        str
                                        <desc_sig_punctuation classes="p p">
                                            ,
                                        <desc_sig_space classes="w w">
                                             
                                             
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                            <desc_returns xml:space="preserve">
                                RenderFrame
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                List
                                <desc_sig_punctuation classes="p p">
                                    [
                                RenderFrame
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Compute the render frames as specified by render_mode attribute during initialization of the environment.
                            <paragraph>
                                The set of supported modes varies per environment. (And some
                                third-party environments may not support rendering at all.)
                                By convention, if render_mode is:
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        None (default): no render is computed.
                                <list_item>
                                    <paragraph>
                                        human: render return None.
                                        The environment is continuously rendered in the current display or terminal. Usually for human consumption.
                                <list_item>
                                    <paragraph>
                                        single_rgb_array: return a single frame representing the current state of the environment.
                                        A frame is a numpy.ndarray with shape (x, y, 3) representing RGB values for an x-by-y pixel image.
                                <list_item>
                                    <paragraph>
                                        rgb_array: return a list of frames representing the states of the environment since the last reset.
                                        Each frame is a numpy.ndarray with shape (x, y, 3), as with single_rgb_array.
                                <list_item>
                                    <paragraph>
                                        ansi: Return a list of strings (str) or StringIO.StringIO containing a
                                        terminal-style text representation for each time step.
                                        The text can include newlines and ANSI escape sequences (e.g. for colors).
                            <note>
                                <paragraph>
                                    Rendering computations is performed internally even if you don’t call render().
                                    To avoid this, you can set render_mode = None and, if the environment supports it,
                                    call render() specifying the argument ‘mode’.
                            <note>
                                <paragraph>
                                    Make sure that your class’s metadata ‘render_modes’ key includes
                                    the list of supported modes. It’s recommended to call super()
                                    in implementations to use the functionality of this method.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.reset()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv reset" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.reset" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.reset" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.reset" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.reset" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.step" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.observation_space" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.step" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.AstraSimEnv.AstraSimEnv.step" reftitle="arch_gym.envs.AstraSimEnv.AstraSimEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'seed()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.seed',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.seed()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv seed" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.seed" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.seed" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                seed
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <field_list>
                                <field>
                                    <field_name>
                                        Deprecated
                                    <field_body>
                                        <paragraph>
                                            function that sets the seed for the environment’s random number generator(s).
                            <paragraph>
                                Use 
                                <title_reference>
                                    env.reset(seed=seed)
                                 as the new API for setting the seed of the environment.
                            <note>
                                <paragraph>
                                    Some environments use multiple pseudorandom number generators.
                                    We want to capture all such seeds used in order to ensure that
                                    there aren’t accidental correlations between multiple generators.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <paragraph>
                                            <literal_strong>
                                                seed
                                             (
                                            <literal_emphasis>
                                                Optional int
                                            )
                                             – 
                                            The seed value for the random number generator
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Returns the list of seeds used in this environment’s random
                                                    <definition>
                                                        <paragraph>
                                                            number generators. The first value in the list should be the
                                                            “main” seed, or the value which a reproducer should pass to
                                                            ‘seed’. Often, the main seed equals the provided ‘seed’, but
                                                            this won’t be true 
                                                            <title_reference>
                                                                if seed=None
                                                            , for example.
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            seeds
                                             (
                                            List
                                            [
                                            int
                                            ]
                                            )
                    <index entries="['single',\ 'step()\ (arch_gym.envs.AstraSimEnv.AstraSimEnv\ method)',\ 'arch_gym.envs.AstraSimEnv.AstraSimEnv.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnv.step()" _toc_parts="arch_gym.envs.AstraSimEnv AstraSimEnv step" class="AstraSimEnv" classes="sig sig-object py sig sig-object" fullname="AstraSimEnv.step" ids="arch_gym.envs.AstraSimEnv.AstraSimEnv.step" module="arch_gym.envs.AstraSimEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action_dict
                        <desc_content>
                            <paragraph>
                                Step function for the environment
        <section ids="module-arch_gym.envs.AstraSimWrapper arch-gym-envs-astrasimwrapper-module" names="arch_gym.envs.astrasimwrapper\ module">
            <title>
                arch_gym.envs.AstraSimWrapper module
            <index entries="['pair',\ 'module;\ arch_gym.envs.AstraSimWrapper',\ 'module-arch_gym.envs.AstraSimWrapper',\ '',\ None]">
            <paragraph>
                Wraps an OpenAI Gym environment to be used as a dm_env environment.
            <index entries="['single',\ 'AstraSimEnvWrapper\ (class\ in\ arch_gym.envs.AstraSimWrapper)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="AstraSimEnvWrapper" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper" class="" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper" module="arch_gym.envs.AstraSimWrapper">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.AstraSimWrapper.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        AstraSimEnvWrapper
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                environment
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                Env
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                env_wrapper_sel
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                str
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                'macme'
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Environment
                    <paragraph>
                        Environment wrapper for OpenAI Gym environments.
                    <index entries="['single',\ 'action_spec()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.action_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.action_spec()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper action_spec" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.action_spec" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.action_spec" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_spec
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Array
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Iterable
                                <desc_sig_punctuation classes="p p">
                                    [
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Mapping
                                <desc_sig_punctuation classes="p p">
                                    [
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                            <paragraph>
                                Defines the actions that should be provided to 
                                <title_reference>
                                    step
                                .
                            <paragraph>
                                May use a subclass of 
                                <title_reference>
                                    specs.Array
                                 that specifies additional properties
                                such as min and max bounds on the values.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'close()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.close',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.close()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper close" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.close" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.close" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                close
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Closes the environment.
                    <index entries="['single',\ 'environment\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ property)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.environment',\ '',\ None]">
                    <desc classes="py property" desctype="property" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="AstraSimEnvWrapper.environment" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper environment" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.environment" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.environment" module="arch_gym.envs.AstraSimWrapper">
                            <desc_annotation xml:space="preserve">
                                property
                                <desc_sig_space classes="w w">
                                     
                                     
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                environment
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Env
                        <desc_content>
                            <paragraph>
                                Returns the wrapped environment.
                    <index entries="['single',\ 'get_info()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.get_info',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.get_info()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper get_info" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.get_info" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.get_info" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                get_info
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Dict
                                <desc_sig_punctuation classes="p p">
                                    [
                                str
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Returns the last info returned from env.step(action).
                                :returns: dictionary of diagnostic information from the last environment step
                                :rtype: info
                    <index entries="['single',\ 'observation_spec()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.observation_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.observation_spec()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper observation_spec" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.observation_spec" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.observation_spec" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_spec
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Array
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Iterable
                                <desc_sig_punctuation classes="p p">
                                    [
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Mapping
                                <desc_sig_punctuation classes="p p">
                                    [
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                            <paragraph>
                                Defines the observations provided by the environment.
                            <paragraph>
                                May use a subclass of 
                                <title_reference>
                                    specs.Array
                                 that specifies additional properties
                                such as min and max bounds on the values.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.reset()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper reset" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.reset" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.reset" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                TimeStep
                        <desc_content>
                            <paragraph>
                                Resets the episode.
                    <index entries="['single',\ 'reward_spec()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.reward_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.reward_spec()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper reward_spec" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.reward_spec" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.reward_spec" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reward_spec
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Describes the reward returned by the environment.
                            <paragraph>
                                By default this is assumed to be a single float.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'step()\ (arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper\ method)',\ 'arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="AstraSimEnvWrapper.step()" _toc_parts="arch_gym.envs.AstraSimWrapper AstraSimEnvWrapper step" class="AstraSimEnvWrapper" classes="sig sig-object py sig sig-object" fullname="AstraSimEnvWrapper.step" ids="arch_gym.envs.AstraSimWrapper.AstraSimEnvWrapper.step" module="arch_gym.envs.AstraSimWrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Any
                            <desc_returns xml:space="preserve">
                                TimeStep
                        <desc_content>
                            <paragraph>
                                Steps the environment.
            <index entries="['single',\ 'make_astraSim_env()\ (in\ module\ arch_gym.envs.AstraSimWrapper)',\ 'arch_gym.envs.AstraSimWrapper.make_astraSim_env',\ '',\ None]">
            <desc classes="py function" desctype="function" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="make_astraSim_env()" _toc_parts="arch_gym.envs.AstraSimWrapper make_astraSim_env" class="" classes="sig sig-object py sig sig-object" fullname="make_astraSim_env" ids="arch_gym.envs.AstraSimWrapper.make_astraSim_env" module="arch_gym.envs.AstraSimWrapper">
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.AstraSimWrapper.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        make_astraSim_env
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                seed
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                int
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                12345
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                rl_form
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                'macme'
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                reward_formulation
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                'power'
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                reward_scaling
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                'false'
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                max_steps
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                int
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                100
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                num_agents
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                int
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                10
                    <desc_returns xml:space="preserve">
                        Environment
                <desc_content>
                    <paragraph>
                        Returns DRAMSys environment.
        <section ids="arch-gym-envs-dramenv-module" names="arch_gym.envs.dramenv\ module">
            <title>
                arch_gym.envs.DRAMEnv module
        <section ids="arch-gym-envs-dramenv-rl-module" names="arch_gym.envs.dramenv_rl\ module">
            <title>
                arch_gym.envs.DRAMEnv_RL module
        <section ids="arch-gym-envs-farsienv-module" names="arch_gym.envs.farsienv\ module">
            <title>
                arch_gym.envs.FARSIEnv module
        <section ids="arch-gym-envs-farsi-sim-env-module" names="arch_gym.envs.farsi_sim_env\ module">
            <title>
                arch_gym.envs.FARSI_sim_env module
        <section ids="arch-gym-envs-farsi-sim-wrapper-module" names="arch_gym.envs.farsi_sim_wrapper\ module">
            <title>
                arch_gym.envs.FARSI_sim_wrapper module
        <section ids="arch-gym-envs-masteroenv-module" names="arch_gym.envs.masteroenv\ module">
            <title>
                arch_gym.envs.MasteroEnv module
        <section ids="module-arch_gym.envs.RandomParameterEnv arch-gym-envs-randomparameterenv-module" names="arch_gym.envs.randomparameterenv\ module">
            <title>
                arch_gym.envs.RandomParameterEnv module
            <index entries="['pair',\ 'module;\ arch_gym.envs.RandomParameterEnv',\ 'module-arch_gym.envs.RandomParameterEnv',\ '',\ None]">
            <index entries="['single',\ 'RandomParameterEnv\ (class\ in\ arch_gym.envs.RandomParameterEnv)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="RandomParameterEnv" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv" class="" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv" module="arch_gym.envs.RandomParameterEnv">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.RandomParameterEnv.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        RandomParameterEnv
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                natural
                            <desc_sig_operator classes="o o">
                                =
                            <inline classes="default_value" support_smartquotes="False">
                                False
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ attribute)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RandomParameterEnv.action_space" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv action_space" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.action_space" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.action_space" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'compute_reward()\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ method)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.compute_reward',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RandomParameterEnv.compute_reward()" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv compute_reward" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.compute_reward" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.compute_reward" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                compute_reward
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ attribute)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="RandomParameterEnv.observation_space" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv observation_space" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.observation_space" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.observation_space" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'random_walk()\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ method)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.random_walk',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RandomParameterEnv.random_walk()" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv random_walk" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.random_walk" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.random_walk" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                random_walk
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        p1
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        p2
                        <desc_content>
                    <index entries="['single',\ 'render()\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ method)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.render',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RandomParameterEnv.render()" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv render" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.render" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.render" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                render
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        *
                                    <desc_sig_name classes="n n">
                                        args
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Tuple
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        **
                                    <desc_sig_name classes="n n">
                                        kwargs
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Dict
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        str
                                        <desc_sig_punctuation classes="p p">
                                            ,
                                        <desc_sig_space classes="w w">
                                             
                                             
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                            <desc_returns xml:space="preserve">
                                RenderFrame
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                List
                                <desc_sig_punctuation classes="p p">
                                    [
                                RenderFrame
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Compute the render frames as specified by render_mode attribute during initialization of the environment.
                            <paragraph>
                                The set of supported modes varies per environment. (And some
                                third-party environments may not support rendering at all.)
                                By convention, if render_mode is:
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        None (default): no render is computed.
                                <list_item>
                                    <paragraph>
                                        human: render return None.
                                        The environment is continuously rendered in the current display or terminal. Usually for human consumption.
                                <list_item>
                                    <paragraph>
                                        single_rgb_array: return a single frame representing the current state of the environment.
                                        A frame is a numpy.ndarray with shape (x, y, 3) representing RGB values for an x-by-y pixel image.
                                <list_item>
                                    <paragraph>
                                        rgb_array: return a list of frames representing the states of the environment since the last reset.
                                        Each frame is a numpy.ndarray with shape (x, y, 3), as with single_rgb_array.
                                <list_item>
                                    <paragraph>
                                        ansi: Return a list of strings (str) or StringIO.StringIO containing a
                                        terminal-style text representation for each time step.
                                        The text can include newlines and ANSI escape sequences (e.g. for colors).
                            <note>
                                <paragraph>
                                    Rendering computations is performed internally even if you don’t call render().
                                    To avoid this, you can set render_mode = None and, if the environment supports it,
                                    call render() specifying the argument ‘mode’.
                            <note>
                                <paragraph>
                                    Make sure that your class’s metadata ‘render_modes’ key includes
                                    the list of supported modes. It’s recommended to call super()
                                    in implementations to use the functionality of this method.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ method)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RandomParameterEnv.reset()" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv reset" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.reset" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.observation_space" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step" reftitle="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'step()\ (arch_gym.envs.RandomParameterEnv.RandomParameterEnv\ method)',\ 'arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="RandomParameterEnv.step()" _toc_parts="arch_gym.envs.RandomParameterEnv RandomParameterEnv step" class="RandomParameterEnv" classes="sig sig-object py sig sig-object" fullname="RandomParameterEnv.step" ids="arch_gym.envs.RandomParameterEnv.RandomParameterEnv.step" module="arch_gym.envs.RandomParameterEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                        <desc_content>
                            <paragraph>
                                Step function for the environment
        <section ids="arch-gym-envs-sniperenv-module" names="arch_gym.envs.sniperenv\ module">
            <title>
                arch_gym.envs.SniperEnv module
        <section ids="arch-gym-envs-timeloopenv-module" names="arch_gym.envs.timeloopenv\ module">
            <title>
                arch_gym.envs.TimeloopEnv module
        <section ids="arch-gym-envs-timeloopenv-rl-module" names="arch_gym.envs.timeloopenv_rl\ module">
            <title>
                arch_gym.envs.TimeloopEnv_RL module
        <section ids="module-arch_gym.envs.archgym_env arch-gym-envs-archgym-env-module" names="arch_gym.envs.archgym_env\ module">
            <title>
                arch_gym.envs.archgym_env module
            <index entries="['pair',\ 'module;\ arch_gym.envs.archgym_env',\ 'module-arch_gym.envs.archgym_env',\ '',\ None]">
            <index entries="['single',\ 'ArchGymEnv\ (class\ in\ arch_gym.envs.archgym_env)',\ 'arch_gym.envs.archgym_env.ArchGymEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ArchGymEnv" _toc_parts="arch_gym.envs.archgym_env ArchGymEnv" class="" classes="sig sig-object py sig sig-object" fullname="ArchGymEnv" ids="arch_gym.envs.archgym_env.ArchGymEnv" module="arch_gym.envs.archgym_env">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.archgym_env.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        ArchGymEnv
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.archgym_env.ArchGymEnv\ attribute)',\ 'arch_gym.envs.archgym_env.ArchGymEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ArchGymEnv.action_space" _toc_parts="arch_gym.envs.archgym_env ArchGymEnv action_space" class="ArchGymEnv" classes="sig sig-object py sig sig-object" fullname="ArchGymEnv.action_space" ids="arch_gym.envs.archgym_env.ArchGymEnv.action_space" module="arch_gym.envs.archgym_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'computeReward()\ (arch_gym.envs.archgym_env.ArchGymEnv\ method)',\ 'arch_gym.envs.archgym_env.ArchGymEnv.computeReward',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ArchGymEnv.computeReward()" _toc_parts="arch_gym.envs.archgym_env ArchGymEnv computeReward" class="ArchGymEnv" classes="sig sig-object py sig sig-object" fullname="ArchGymEnv.computeReward" ids="arch_gym.envs.archgym_env.ArchGymEnv.computeReward" module="arch_gym.envs.archgym_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                computeReward
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                    <index entries="['single',\ 'getGoal()\ (arch_gym.envs.archgym_env.ArchGymEnv\ method)',\ 'arch_gym.envs.archgym_env.ArchGymEnv.getGoal',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ArchGymEnv.getGoal()" _toc_parts="arch_gym.envs.archgym_env ArchGymEnv getGoal" class="ArchGymEnv" classes="sig sig-object py sig sig-object" fullname="ArchGymEnv.getGoal" ids="arch_gym.envs.archgym_env.ArchGymEnv.getGoal" module="arch_gym.envs.archgym_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                getGoal
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.archgym_env.ArchGymEnv\ attribute)',\ 'arch_gym.envs.archgym_env.ArchGymEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ArchGymEnv.observation_space" _toc_parts="arch_gym.envs.archgym_env ArchGymEnv observation_space" class="ArchGymEnv" classes="sig sig-object py sig sig-object" fullname="ArchGymEnv.observation_space" ids="arch_gym.envs.archgym_env.ArchGymEnv.observation_space" module="arch_gym.envs.archgym_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
        <section ids="module-arch_gym.envs.custom_env arch-gym-envs-custom-env-module" names="arch_gym.envs.custom_env\ module">
            <title>
                arch_gym.envs.custom_env module
            <index entries="['pair',\ 'module;\ arch_gym.envs.custom_env',\ 'module-arch_gym.envs.custom_env',\ '',\ None]">
            <index entries="['single',\ 'CustomEnv\ (class\ in\ arch_gym.envs.custom_env)',\ 'arch_gym.envs.custom_env.CustomEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CustomEnv" _toc_parts="arch_gym.envs.custom_env CustomEnv" class="" classes="sig sig-object py sig sig-object" fullname="CustomEnv" ids="arch_gym.envs.custom_env.CustomEnv" module="arch_gym.envs.custom_env">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.custom_env.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        CustomEnv
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.custom_env.CustomEnv\ attribute)',\ 'arch_gym.envs.custom_env.CustomEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomEnv.action_space" _toc_parts="arch_gym.envs.custom_env CustomEnv action_space" class="CustomEnv" classes="sig sig-object py sig sig-object" fullname="CustomEnv.action_space" ids="arch_gym.envs.custom_env.CustomEnv.action_space" module="arch_gym.envs.custom_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.custom_env.CustomEnv\ attribute)',\ 'arch_gym.envs.custom_env.CustomEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="CustomEnv.observation_space" _toc_parts="arch_gym.envs.custom_env CustomEnv observation_space" class="CustomEnv" classes="sig sig-object py sig sig-object" fullname="CustomEnv.observation_space" ids="arch_gym.envs.custom_env.CustomEnv.observation_space" module="arch_gym.envs.custom_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'render()\ (arch_gym.envs.custom_env.CustomEnv\ method)',\ 'arch_gym.envs.custom_env.CustomEnv.render',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnv.render()" _toc_parts="arch_gym.envs.custom_env CustomEnv render" class="CustomEnv" classes="sig sig-object py sig sig-object" fullname="CustomEnv.render" ids="arch_gym.envs.custom_env.CustomEnv.render" module="arch_gym.envs.custom_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                render
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        *
                                    <desc_sig_name classes="n n">
                                        args
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Tuple
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        **
                                    <desc_sig_name classes="n n">
                                        kwargs
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Dict
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        str
                                        <desc_sig_punctuation classes="p p">
                                            ,
                                        <desc_sig_space classes="w w">
                                             
                                             
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                            <desc_returns xml:space="preserve">
                                RenderFrame
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                List
                                <desc_sig_punctuation classes="p p">
                                    [
                                RenderFrame
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Compute the render frames as specified by render_mode attribute during initialization of the environment.
                            <paragraph>
                                The set of supported modes varies per environment. (And some
                                third-party environments may not support rendering at all.)
                                By convention, if render_mode is:
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        None (default): no render is computed.
                                <list_item>
                                    <paragraph>
                                        human: render return None.
                                        The environment is continuously rendered in the current display or terminal. Usually for human consumption.
                                <list_item>
                                    <paragraph>
                                        single_rgb_array: return a single frame representing the current state of the environment.
                                        A frame is a numpy.ndarray with shape (x, y, 3) representing RGB values for an x-by-y pixel image.
                                <list_item>
                                    <paragraph>
                                        rgb_array: return a list of frames representing the states of the environment since the last reset.
                                        Each frame is a numpy.ndarray with shape (x, y, 3), as with single_rgb_array.
                                <list_item>
                                    <paragraph>
                                        ansi: Return a list of strings (str) or StringIO.StringIO containing a
                                        terminal-style text representation for each time step.
                                        The text can include newlines and ANSI escape sequences (e.g. for colors).
                            <note>
                                <paragraph>
                                    Rendering computations is performed internally even if you don’t call render().
                                    To avoid this, you can set render_mode = None and, if the environment supports it,
                                    call render() specifying the argument ‘mode’.
                            <note>
                                <paragraph>
                                    Make sure that your class’s metadata ‘render_modes’ key includes
                                    the list of supported modes. It’s recommended to call super()
                                    in implementations to use the functionality of this method.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.custom_env.CustomEnv\ method)',\ 'arch_gym.envs.custom_env.CustomEnv.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnv.reset()" _toc_parts="arch_gym.envs.custom_env CustomEnv reset" class="CustomEnv" classes="sig sig-object py sig sig-object" fullname="CustomEnv.reset" ids="arch_gym.envs.custom_env.CustomEnv.reset" module="arch_gym.envs.custom_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.reset" reftitle="arch_gym.envs.custom_env.CustomEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.reset" reftitle="arch_gym.envs.custom_env.CustomEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.step" reftitle="arch_gym.envs.custom_env.CustomEnv.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.observation_space" reftitle="arch_gym.envs.custom_env.CustomEnv.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.step" reftitle="arch_gym.envs.custom_env.CustomEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_env.CustomEnv.step" reftitle="arch_gym.envs.custom_env.CustomEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'step()\ (arch_gym.envs.custom_env.CustomEnv\ method)',\ 'arch_gym.envs.custom_env.CustomEnv.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnv.step()" _toc_parts="arch_gym.envs.custom_env CustomEnv step" class="CustomEnv" classes="sig sig-object py sig sig-object" fullname="CustomEnv.step" ids="arch_gym.envs.custom_env.CustomEnv.step" module="arch_gym.envs.custom_env">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                        <desc_content>
                            <paragraph>
                                Step function for the environment
        <section ids="module-arch_gym.envs.custom_env_2 arch-gym-envs-custom-env-2-module" names="arch_gym.envs.custom_env_2\ module">
            <title>
                arch_gym.envs.custom_env_2 module
            <index entries="['pair',\ 'module;\ arch_gym.envs.custom_env_2',\ 'module-arch_gym.envs.custom_env_2',\ '',\ None]">
            <index entries="['single',\ 'SimpleArch\ (class\ in\ arch_gym.envs.custom_env_2)',\ 'arch_gym.envs.custom_env_2.SimpleArch',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="SimpleArch" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch" class="" classes="sig sig-object py sig sig-object" fullname="SimpleArch" ids="arch_gym.envs.custom_env_2.SimpleArch" module="arch_gym.envs.custom_env_2">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.custom_env_2.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        SimpleArch
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.custom_env_2.SimpleArch\ attribute)',\ 'arch_gym.envs.custom_env_2.SimpleArch.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SimpleArch.action_space" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch action_space" class="SimpleArch" classes="sig sig-object py sig sig-object" fullname="SimpleArch.action_space" ids="arch_gym.envs.custom_env_2.SimpleArch.action_space" module="arch_gym.envs.custom_env_2">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.custom_env_2.SimpleArch\ attribute)',\ 'arch_gym.envs.custom_env_2.SimpleArch.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="SimpleArch.observation_space" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch observation_space" class="SimpleArch" classes="sig sig-object py sig sig-object" fullname="SimpleArch.observation_space" ids="arch_gym.envs.custom_env_2.SimpleArch.observation_space" module="arch_gym.envs.custom_env_2">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'render()\ (arch_gym.envs.custom_env_2.SimpleArch\ method)',\ 'arch_gym.envs.custom_env_2.SimpleArch.render',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SimpleArch.render()" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch render" class="SimpleArch" classes="sig sig-object py sig sig-object" fullname="SimpleArch.render" ids="arch_gym.envs.custom_env_2.SimpleArch.render" module="arch_gym.envs.custom_env_2">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                render
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        *
                                    <desc_sig_name classes="n n">
                                        args
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Tuple
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        **
                                    <desc_sig_name classes="n n">
                                        kwargs
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Dict
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        str
                                        <desc_sig_punctuation classes="p p">
                                            ,
                                        <desc_sig_space classes="w w">
                                             
                                             
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                            <desc_returns xml:space="preserve">
                                RenderFrame
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                List
                                <desc_sig_punctuation classes="p p">
                                    [
                                RenderFrame
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Compute the render frames as specified by render_mode attribute during initialization of the environment.
                            <paragraph>
                                The set of supported modes varies per environment. (And some
                                third-party environments may not support rendering at all.)
                                By convention, if render_mode is:
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        None (default): no render is computed.
                                <list_item>
                                    <paragraph>
                                        human: render return None.
                                        The environment is continuously rendered in the current display or terminal. Usually for human consumption.
                                <list_item>
                                    <paragraph>
                                        single_rgb_array: return a single frame representing the current state of the environment.
                                        A frame is a numpy.ndarray with shape (x, y, 3) representing RGB values for an x-by-y pixel image.
                                <list_item>
                                    <paragraph>
                                        rgb_array: return a list of frames representing the states of the environment since the last reset.
                                        Each frame is a numpy.ndarray with shape (x, y, 3), as with single_rgb_array.
                                <list_item>
                                    <paragraph>
                                        ansi: Return a list of strings (str) or StringIO.StringIO containing a
                                        terminal-style text representation for each time step.
                                        The text can include newlines and ANSI escape sequences (e.g. for colors).
                            <note>
                                <paragraph>
                                    Rendering computations is performed internally even if you don’t call render().
                                    To avoid this, you can set render_mode = None and, if the environment supports it,
                                    call render() specifying the argument ‘mode’.
                            <note>
                                <paragraph>
                                    Make sure that your class’s metadata ‘render_modes’ key includes
                                    the list of supported modes. It’s recommended to call super()
                                    in implementations to use the functionality of this method.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.custom_env_2.SimpleArch\ method)',\ 'arch_gym.envs.custom_env_2.SimpleArch.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SimpleArch.reset()" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch reset" class="SimpleArch" classes="sig sig-object py sig sig-object" fullname="SimpleArch.reset" ids="arch_gym.envs.custom_env_2.SimpleArch.reset" module="arch_gym.envs.custom_env_2">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.reset" reftitle="arch_gym.envs.custom_env_2.SimpleArch.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.reset" reftitle="arch_gym.envs.custom_env_2.SimpleArch.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.step" reftitle="arch_gym.envs.custom_env_2.SimpleArch.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.observation_space" reftitle="arch_gym.envs.custom_env_2.SimpleArch.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.step" reftitle="arch_gym.envs.custom_env_2.SimpleArch.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_env_2.SimpleArch.step" reftitle="arch_gym.envs.custom_env_2.SimpleArch.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'step()\ (arch_gym.envs.custom_env_2.SimpleArch\ method)',\ 'arch_gym.envs.custom_env_2.SimpleArch.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="SimpleArch.step()" _toc_parts="arch_gym.envs.custom_env_2 SimpleArch step" class="SimpleArch" classes="sig sig-object py sig sig-object" fullname="SimpleArch.step" ids="arch_gym.envs.custom_env_2.SimpleArch.step" module="arch_gym.envs.custom_env_2">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                        <desc_content>
                            <paragraph>
                                Step function for the environment
            <index entries="['single',\ 'main()\ (in\ module\ arch_gym.envs.custom_env_2)',\ 'arch_gym.envs.custom_env_2.main',\ '',\ None]">
            <desc classes="py function" desctype="function" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="main()" _toc_parts="arch_gym.envs.custom_env_2 main" class="" classes="sig sig-object py sig sig-object" fullname="main" ids="arch_gym.envs.custom_env_2.main" module="arch_gym.envs.custom_env_2">
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.custom_env_2.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        main
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                _
                <desc_content>
        <section ids="module-arch_gym.envs.custom_gym arch-gym-envs-custom-gym-module" names="arch_gym.envs.custom_gym\ module">
            <title>
                arch_gym.envs.custom_gym module
            <index entries="['pair',\ 'module;\ arch_gym.envs.custom_gym',\ 'module-arch_gym.envs.custom_gym',\ '',\ None]">
            <index entries="['single',\ 'ExampleEnv\ (class\ in\ arch_gym.envs.custom_gym)',\ 'arch_gym.envs.custom_gym.ExampleEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="ExampleEnv" _toc_parts="arch_gym.envs.custom_gym ExampleEnv" class="" classes="sig sig-object py sig sig-object" fullname="ExampleEnv" ids="arch_gym.envs.custom_gym.ExampleEnv" module="arch_gym.envs.custom_gym">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.custom_gym.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        ExampleEnv
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.custom_gym.ExampleEnv\ attribute)',\ 'arch_gym.envs.custom_gym.ExampleEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ExampleEnv.action_space" _toc_parts="arch_gym.envs.custom_gym ExampleEnv action_space" class="ExampleEnv" classes="sig sig-object py sig sig-object" fullname="ExampleEnv.action_space" ids="arch_gym.envs.custom_gym.ExampleEnv.action_space" module="arch_gym.envs.custom_gym">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.custom_gym.ExampleEnv\ attribute)',\ 'arch_gym.envs.custom_gym.ExampleEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="ExampleEnv.observation_space" _toc_parts="arch_gym.envs.custom_gym ExampleEnv observation_space" class="ExampleEnv" classes="sig sig-object py sig sig-object" fullname="ExampleEnv.observation_space" ids="arch_gym.envs.custom_gym.ExampleEnv.observation_space" module="arch_gym.envs.custom_gym">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'render()\ (arch_gym.envs.custom_gym.ExampleEnv\ method)',\ 'arch_gym.envs.custom_gym.ExampleEnv.render',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ExampleEnv.render()" _toc_parts="arch_gym.envs.custom_gym ExampleEnv render" class="ExampleEnv" classes="sig sig-object py sig sig-object" fullname="ExampleEnv.render" ids="arch_gym.envs.custom_gym.ExampleEnv.render" module="arch_gym.envs.custom_gym">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                render
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        *
                                    <desc_sig_name classes="n n">
                                        args
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Tuple
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_operator classes="o o">
                                        **
                                    <desc_sig_name classes="n n">
                                        kwargs
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Dict
                                        <desc_sig_punctuation classes="p p">
                                            [
                                        str
                                        <desc_sig_punctuation classes="p p">
                                            ,
                                        <desc_sig_space classes="w w">
                                             
                                             
                                        Any
                                        <desc_sig_punctuation classes="p p">
                                            ]
                            <desc_returns xml:space="preserve">
                                RenderFrame
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                List
                                <desc_sig_punctuation classes="p p">
                                    [
                                RenderFrame
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Compute the render frames as specified by render_mode attribute during initialization of the environment.
                            <paragraph>
                                The set of supported modes varies per environment. (And some
                                third-party environments may not support rendering at all.)
                                By convention, if render_mode is:
                            <bullet_list bullet="-">
                                <list_item>
                                    <paragraph>
                                        None (default): no render is computed.
                                <list_item>
                                    <paragraph>
                                        human: render return None.
                                        The environment is continuously rendered in the current display or terminal. Usually for human consumption.
                                <list_item>
                                    <paragraph>
                                        single_rgb_array: return a single frame representing the current state of the environment.
                                        A frame is a numpy.ndarray with shape (x, y, 3) representing RGB values for an x-by-y pixel image.
                                <list_item>
                                    <paragraph>
                                        rgb_array: return a list of frames representing the states of the environment since the last reset.
                                        Each frame is a numpy.ndarray with shape (x, y, 3), as with single_rgb_array.
                                <list_item>
                                    <paragraph>
                                        ansi: Return a list of strings (str) or StringIO.StringIO containing a
                                        terminal-style text representation for each time step.
                                        The text can include newlines and ANSI escape sequences (e.g. for colors).
                            <note>
                                <paragraph>
                                    Rendering computations is performed internally even if you don’t call render().
                                    To avoid this, you can set render_mode = None and, if the environment supports it,
                                    call render() specifying the argument ‘mode’.
                            <note>
                                <paragraph>
                                    Make sure that your class’s metadata ‘render_modes’ key includes
                                    the list of supported modes. It’s recommended to call super()
                                    in implementations to use the functionality of this method.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.custom_gym.ExampleEnv\ method)',\ 'arch_gym.envs.custom_gym.ExampleEnv.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ExampleEnv.reset()" _toc_parts="arch_gym.envs.custom_gym ExampleEnv reset" class="ExampleEnv" classes="sig sig-object py sig sig-object" fullname="ExampleEnv.reset" ids="arch_gym.envs.custom_gym.ExampleEnv.reset" module="arch_gym.envs.custom_gym">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.reset" reftitle="arch_gym.envs.custom_gym.ExampleEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.reset" reftitle="arch_gym.envs.custom_gym.ExampleEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.step" reftitle="arch_gym.envs.custom_gym.ExampleEnv.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.observation_space" reftitle="arch_gym.envs.custom_gym.ExampleEnv.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.step" reftitle="arch_gym.envs.custom_gym.ExampleEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.custom_gym.ExampleEnv.step" reftitle="arch_gym.envs.custom_gym.ExampleEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'step()\ (arch_gym.envs.custom_gym.ExampleEnv\ method)',\ 'arch_gym.envs.custom_gym.ExampleEnv.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="ExampleEnv.step()" _toc_parts="arch_gym.envs.custom_gym ExampleEnv step" class="ExampleEnv" classes="sig sig-object py sig sig-object" fullname="ExampleEnv.step" ids="arch_gym.envs.custom_gym.ExampleEnv.step" module="arch_gym.envs.custom_gym">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                        <desc_content>
                            <paragraph>
                                Step function for the environment
        <section ids="module-arch_gym.envs.customenv_wrapper arch-gym-envs-customenv-wrapper-module" names="arch_gym.envs.customenv_wrapper\ module">
            <title>
                arch_gym.envs.customenv_wrapper module
            <index entries="['pair',\ 'module;\ arch_gym.envs.customenv_wrapper',\ 'module-arch_gym.envs.customenv_wrapper',\ '',\ None]">
            <paragraph>
                Wraps an OpenAI Gym environment to be used as a dm_env environment.
            <index entries="['single',\ 'CustomEnvWrapper\ (class\ in\ arch_gym.envs.customenv_wrapper)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="CustomEnvWrapper" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper" class="" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper" module="arch_gym.envs.customenv_wrapper">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.customenv_wrapper.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        CustomEnvWrapper
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                environment
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                Env
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Environment
                    <paragraph>
                        Environment wrapper for OpenAI Gym environments. It wraps the environment into the deepmind envlogger interface.
                    <index entries="['single',\ 'action_spec()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.action_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.action_spec()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper action_spec" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.action_spec" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.action_spec" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_spec
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Array
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Iterable
                                <desc_sig_punctuation classes="p p">
                                    [
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Mapping
                                <desc_sig_punctuation classes="p p">
                                    [
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                            <paragraph>
                                Defines the actions that should be provided to 
                                <title_reference>
                                    step
                                .
                            <paragraph>
                                May use a subclass of 
                                <title_reference>
                                    specs.Array
                                 that specifies additional properties
                                such as min and max bounds on the values.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'close()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.close',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.close()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper close" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.close" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.close" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                close
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Closes the environment.
                    <index entries="['single',\ 'environment\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ property)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.environment',\ '',\ None]">
                    <desc classes="py property" desctype="property" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="property">
                        <desc_signature _toc_name="CustomEnvWrapper.environment" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper environment" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.environment" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.environment" module="arch_gym.envs.customenv_wrapper">
                            <desc_annotation xml:space="preserve">
                                property
                                <desc_sig_space classes="w w">
                                     
                                     
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                environment
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Env
                        <desc_content>
                            <paragraph>
                                Returns the wrapped environment.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            the wrapped environment
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            environment
                    <index entries="['single',\ 'get_info()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.get_info',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.get_info()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper get_info" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.get_info" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.get_info" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                get_info
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Dict
                                <desc_sig_punctuation classes="p p">
                                    [
                                str
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                None
                        <desc_content>
                            <paragraph>
                                Returns the last info returned from env.step(action).
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            dictionary of diagnostic information from the last environment step
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            info
                            <paragraph>
                                Return Type: dict
                    <index entries="['single',\ 'observation_spec()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.observation_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.observation_spec()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper observation_spec" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.observation_spec" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.observation_spec" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_spec
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                Array
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Iterable
                                <desc_sig_punctuation classes="p p">
                                    [
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    |
                                <desc_sig_space classes="w w">
                                     
                                     
                                Mapping
                                <desc_sig_punctuation classes="p p">
                                    [
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                NestedSpec
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                            <paragraph>
                                Defines the observations provided by the environment.
                            <paragraph>
                                May use a subclass of 
                                <title_reference>
                                    specs.Array
                                 that specifies additional properties
                                such as min and max bounds on the values.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.reset()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper reset" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.reset" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.reset" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                            <desc_returns xml:space="preserve">
                                TimeStep
                        <desc_content>
                            <paragraph>
                                Resets the episode.
                    <index entries="['single',\ 'reward_spec()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.reward_spec',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.reward_spec()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper reward_spec" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.reward_spec" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.reward_spec" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reward_spec
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Describes the reward returned by the environment.
                            <paragraph>
                                By default this is assumed to be a single float.
                            <field_list>
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            An 
                                            <title_reference>
                                                Array
                                             spec, or a nested dict, list or tuple of 
                                            <title_reference>
                                                Array
                                             specs.
                    <index entries="['single',\ 'step()\ (arch_gym.envs.customenv_wrapper.CustomEnvWrapper\ method)',\ 'arch_gym.envs.customenv_wrapper.CustomEnvWrapper.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="CustomEnvWrapper.step()" _toc_parts="arch_gym.envs.customenv_wrapper CustomEnvWrapper step" class="CustomEnvWrapper" classes="sig sig-object py sig sig-object" fullname="CustomEnvWrapper.step" ids="arch_gym.envs.customenv_wrapper.CustomEnvWrapper.step" module="arch_gym.envs.customenv_wrapper">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                                    <desc_sig_punctuation classes="p p">
                                        :
                                    <desc_sig_space classes="w w">
                                         
                                         
                                    <desc_sig_name classes="n n">
                                        Any
                            <desc_returns xml:space="preserve">
                                TimeStep
                        <desc_content>
                            <paragraph>
                                Steps the environment.
            <index entries="['single',\ 'make_custom_env()\ (in\ module\ arch_gym.envs.customenv_wrapper)',\ 'arch_gym.envs.customenv_wrapper.make_custom_env',\ '',\ None]">
            <desc classes="py function" desctype="function" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="make_custom_env()" _toc_parts="arch_gym.envs.customenv_wrapper make_custom_env" class="" classes="sig sig-object py sig sig-object" fullname="make_custom_env" ids="arch_gym.envs.customenv_wrapper.make_custom_env" module="arch_gym.envs.customenv_wrapper">
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.customenv_wrapper.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        make_custom_env
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                seed
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                int
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                12234
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                max_steps
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                int
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                100
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                reward_formulation
                            <desc_sig_punctuation classes="p p">
                                :
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_name classes="n n">
                                str
                            <desc_sig_space classes="w w">
                                 
                                 
                            <desc_sig_operator classes="o o">
                                =
                            <desc_sig_space classes="w w">
                                 
                                 
                            <inline classes="default_value" support_smartquotes="False">
                                'power'
                    <desc_returns xml:space="preserve">
                        Environment
                <desc_content>
                    <paragraph>
                        Returns the custom environment.
                    <field_list>
                        <field>
                            <field_name>
                                Parameters
                            <field_body>
                                <bullet_list>
                                    <list_item>
                                        <paragraph>
                                            <literal_strong>
                                                seed
                                             – 
                                            seed for the environment
                                    <list_item>
                                        <paragraph>
                                            <literal_strong>
                                                max_steps
                                             – 
                                            maximum number of steps in an episode
                                    <list_item>
                                        <paragraph>
                                            <literal_strong>
                                                reward_formulation
                                             – 
                                            formulation of the reward function
                        <field>
                            <field_name>
                                Returns
                            <field_body>
                                <paragraph>
                                    the custom environment
                        <field>
                            <field_name>
                                Return type
                            <field_body>
                                <paragraph>
                                    environment
        <section ids="arch-gym-envs-dramsys-wrapper-module" names="arch_gym.envs.dramsys_wrapper\ module">
            <title>
                arch_gym.envs.dramsys_wrapper module
        <section ids="arch-gym-envs-dramsys-wrapper-rl-module" names="arch_gym.envs.dramsys_wrapper_rl\ module">
            <title>
                arch_gym.envs.dramsys_wrapper_rl module
        <section ids="arch-gym-envs-envhelpers-module" names="arch_gym.envs.envhelpers\ module">
            <title>
                arch_gym.envs.envHelpers module
        <section ids="arch-gym-envs-envlogger-reader-test-module" names="arch_gym.envs.envlogger_reader_test\ module">
            <title>
                arch_gym.envs.envlogger_reader_test module
        <section ids="module-arch_gym.envs.envlogger_writer_test arch-gym-envs-envlogger-writer-test-module" names="arch_gym.envs.envlogger_writer_test\ module">
            <title>
                arch_gym.envs.envlogger_writer_test module
            <index entries="['pair',\ 'module;\ arch_gym.envs.envlogger_writer_test',\ 'module-arch_gym.envs.envlogger_writer_test',\ '',\ None]">
        <section ids="module-arch_gym.envs.loggers arch-gym-envs-loggers-module" names="arch_gym.envs.loggers\ module">
            <title>
                arch_gym.envs.loggers module
            <index entries="['pair',\ 'module;\ arch_gym.envs.loggers',\ 'module-arch_gym.envs.loggers',\ '',\ None]">
            <index entries="['single',\ 'write_csv()\ (in\ module\ arch_gym.envs.loggers)',\ 'arch_gym.envs.loggers.write_csv',\ '',\ None]">
            <desc classes="py function" desctype="function" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="function">
                <desc_signature _toc_name="write_csv()" _toc_parts="arch_gym.envs.loggers write_csv" class="" classes="sig sig-object py sig sig-object" fullname="write_csv" ids="arch_gym.envs.loggers.write_csv" module="arch_gym.envs.loggers">
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.loggers.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        write_csv
                    <desc_parameterlist xml:space="preserve">
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                path
                        <desc_parameter xml:space="preserve">
                            <desc_sig_name classes="n n">
                                data
                <desc_content>
        <section ids="arch-gym-envs-maestero-wrapper-module" names="arch_gym.envs.maestero_wrapper\ module">
            <title>
                arch_gym.envs.maestero_wrapper module
        <section ids="module-arch_gym.envs.simpleEnv arch-gym-envs-simpleenv-module" names="arch_gym.envs.simpleenv\ module">
            <title>
                arch_gym.envs.simpleEnv module
            <index entries="['pair',\ 'module;\ arch_gym.envs.simpleEnv',\ 'module-arch_gym.envs.simpleEnv',\ '',\ None]">
            <index entries="['single',\ 'simpleEnv\ (class\ in\ arch_gym.envs.simpleEnv)',\ 'arch_gym.envs.simpleEnv.simpleEnv',\ '',\ None]">
            <desc classes="py class" desctype="class" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="class">
                <desc_signature _toc_name="simpleEnv" _toc_parts="arch_gym.envs.simpleEnv simpleEnv" class="" classes="sig sig-object py sig sig-object" fullname="simpleEnv" ids="arch_gym.envs.simpleEnv.simpleEnv" module="arch_gym.envs.simpleEnv">
                    <desc_annotation xml:space="preserve">
                        class
                        <desc_sig_space classes="w w">
                             
                             
                    <desc_addname classes="sig-prename descclassname sig-prename descclassname" xml:space="preserve">
                        arch_gym.envs.simpleEnv.
                    <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                        simpleEnv
                <desc_content>
                    <paragraph>
                        Bases: 
                        <literal classes="xref py py-class">
                            Env
                    <index entries="['single',\ 'LF_MIN\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.LF_MIN',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.LF_MIN" _toc_parts="arch_gym.envs.simpleEnv simpleEnv LF_MIN" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.LF_MIN" ids="arch_gym.envs.simpleEnv.simpleEnv.LF_MIN" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                LF_MIN
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                1
                        <desc_content>
                    <index entries="['single',\ 'RT_MAX\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.RT_MAX',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.RT_MAX" _toc_parts="arch_gym.envs.simpleEnv simpleEnv RT_MAX" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.RT_MAX" ids="arch_gym.envs.simpleEnv.simpleEnv.RT_MAX" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                RT_MAX
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                10
                        <desc_content>
                    <index entries="['single',\ 'action_space\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.action_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.action_space" _toc_parts="arch_gym.envs.simpleEnv simpleEnv action_space" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.action_space" ids="arch_gym.envs.simpleEnv.simpleEnv.action_space" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                action_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ActType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'max_steps\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.max_steps',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.max_steps" _toc_parts="arch_gym.envs.simpleEnv simpleEnv max_steps" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.max_steps" ids="arch_gym.envs.simpleEnv.simpleEnv.max_steps" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                max_steps
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                10
                        <desc_content>
                    <index entries="['single',\ 'metadata\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.metadata',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.metadata" _toc_parts="arch_gym.envs.simpleEnv simpleEnv metadata" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.metadata" ids="arch_gym.envs.simpleEnv.simpleEnv.metadata" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                metadata
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Dict
                                <desc_sig_punctuation classes="p p">
                                    [
                                str
                                <desc_sig_punctuation classes="p p">
                                    ,
                                <desc_sig_space classes="w w">
                                     
                                     
                                Any
                                <desc_sig_punctuation classes="p p">
                                    ]
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                {'render.modes': ['human']}
                        <desc_content>
                    <index entries="['single',\ 'move_left\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.move_left',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.move_left" _toc_parts="arch_gym.envs.simpleEnv simpleEnv move_left" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.move_left" ids="arch_gym.envs.simpleEnv.simpleEnv.move_left" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                move_left
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                0
                        <desc_content>
                    <index entries="['single',\ 'move_right\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.move_right',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.move_right" _toc_parts="arch_gym.envs.simpleEnv simpleEnv move_right" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.move_right" ids="arch_gym.envs.simpleEnv.simpleEnv.move_right" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                move_right
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                1
                        <desc_content>
                    <index entries="['single',\ 'observation_space\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.observation_space',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.observation_space" _toc_parts="arch_gym.envs.simpleEnv simpleEnv observation_space" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.observation_space" ids="arch_gym.envs.simpleEnv.simpleEnv.observation_space" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                observation_space
                            <desc_annotation xml:space="preserve">
                                <desc_sig_punctuation classes="p p">
                                    :
                                <desc_sig_space classes="w w">
                                     
                                     
                                Space
                                <desc_sig_punctuation classes="p p">
                                    [
                                ObsType
                                <desc_sig_punctuation classes="p p">
                                    ]
                        <desc_content>
                    <index entries="['single',\ 'reset()\ (arch_gym.envs.simpleEnv.simpleEnv\ method)',\ 'arch_gym.envs.simpleEnv.simpleEnv.reset',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="simpleEnv.reset()" _toc_parts="arch_gym.envs.simpleEnv simpleEnv reset" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.reset" ids="arch_gym.envs.simpleEnv.simpleEnv.reset" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reset
                            <desc_parameterlist xml:space="preserve">
                        <desc_content>
                            <paragraph>
                                Resets the environment to an initial state and returns the initial observation.
                            <paragraph>
                                This method can reset the environment’s random number generator(s) if 
                                <literal>
                                    seed
                                 is an integer or
                                if the environment has not yet initialized a random number generator.
                                If the environment already has a random number generator and 
                                <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.reset" reftitle="arch_gym.envs.simpleEnv.simpleEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 is called with 
                                <literal>
                                    seed=None
                                ,
                                the RNG should not be reset. Moreover, 
                                <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.reset" reftitle="arch_gym.envs.simpleEnv.simpleEnv.reset">
                                    <literal classes="xref py py-meth">
                                        reset()
                                 should (in the typical use case) be called with an
                                integer seed right after initialization and then never again.
                            <field_list>
                                <field>
                                    <field_name>
                                        Parameters
                                    <field_body>
                                        <bullet_list>
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        seed
                                                     (
                                                    <literal_emphasis>
                                                        optional int
                                                    )
                                                     – 
                                                    The seed that is used to initialize the environment’s PRNG.
                                                    If the environment does not already have a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     (the default option) is passed,
                                                    a seed will be chosen from some source of entropy (e.g. timestamp or /dev/urandom).
                                                    However, if the environment already has a PRNG and 
                                                    <literal>
                                                        seed=None
                                                     is passed, the PRNG will 
                                                    <emphasis>
                                                        not
                                                     be reset.
                                                    If you pass an integer, the PRNG will be reset even if it already exists.
                                                    Usually, you want to pass an integer 
                                                    <emphasis>
                                                        right after the environment has been initialized and then never again
                                                    .
                                                    Please refer to the minimal example above to see this paradigm in action.
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        return_info
                                                     (
                                                    <literal_emphasis>
                                                        bool
                                                    )
                                                     – 
                                                    If true, return additional information along with initial observation.
                                                    This info should be analogous to the info returned in 
                                                    <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.step" reftitle="arch_gym.envs.simpleEnv.simpleEnv.step">
                                                        <literal classes="xref py py-meth">
                                                            step()
                                            <list_item>
                                                <paragraph>
                                                    <literal_strong>
                                                        options
                                                     (
                                                    <literal_emphasis>
                                                        optional dict
                                                    )
                                                     – 
                                                    Additional information to specify how the environment is reset (optional,
                                                    depending on the specific environment)
                                <field>
                                    <field_name>
                                        Returns
                                    <field_body>
                                        <paragraph>
                                            <definition_list>
                                                <definition_list_item>
                                                    <term>
                                                        Observation of the initial state. This will be an element of 
                                                        <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.observation_space" reftitle="arch_gym.envs.simpleEnv.simpleEnv.observation_space">
                                                            <literal classes="xref py py-attr">
                                                                observation_space
                                                    <definition>
                                                        <paragraph>
                                                            (typically a numpy array) and is analogous to the observation returned by 
                                                            <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.step" reftitle="arch_gym.envs.simpleEnv.simpleEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                                <definition_list_item>
                                                    <term>
                                                        info (optional dictionary): This will 
                                                        <emphasis>
                                                            only
                                                         be returned if 
                                                        <literal>
                                                            return_info=True
                                                         is passed.
                                                    <definition>
                                                        <paragraph>
                                                            It contains auxiliary information complementing 
                                                            <literal>
                                                                observation
                                                            . This dictionary should be analogous to
                                                            the 
                                                            <literal>
                                                                info
                                                             returned by 
                                                            <reference internal="True" refid="arch_gym.envs.simpleEnv.simpleEnv.step" reftitle="arch_gym.envs.simpleEnv.simpleEnv.step">
                                                                <literal classes="xref py py-meth">
                                                                    step()
                                                            .
                                <field>
                                    <field_name>
                                        Return type
                                    <field_body>
                                        <paragraph>
                                            observation
                                             (
                                            object
                                            )
                    <index entries="['single',\ 'reward_away\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.reward_away',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.reward_away" _toc_parts="arch_gym.envs.simpleEnv simpleEnv reward_away" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.reward_away" ids="arch_gym.envs.simpleEnv.simpleEnv.reward_away" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reward_away
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                -2
                        <desc_content>
                    <index entries="['single',\ 'reward_goal\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.reward_goal',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.reward_goal" _toc_parts="arch_gym.envs.simpleEnv simpleEnv reward_goal" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.reward_goal" ids="arch_gym.envs.simpleEnv.simpleEnv.reward_goal" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reward_goal
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                10
                        <desc_content>
                    <index entries="['single',\ 'reward_step\ (arch_gym.envs.simpleEnv.simpleEnv\ attribute)',\ 'arch_gym.envs.simpleEnv.simpleEnv.reward_step',\ '',\ None]">
                    <desc classes="py attribute" desctype="attribute" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="attribute">
                        <desc_signature _toc_name="simpleEnv.reward_step" _toc_parts="arch_gym.envs.simpleEnv simpleEnv reward_step" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.reward_step" ids="arch_gym.envs.simpleEnv.simpleEnv.reward_step" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                reward_step
                            <desc_annotation xml:space="preserve">
                                <desc_sig_space classes="w w">
                                     
                                     
                                <desc_sig_punctuation classes="p p">
                                    =
                                <desc_sig_space classes="w w">
                                     
                                     
                                -1
                        <desc_content>
                    <index entries="['single',\ 'step()\ (arch_gym.envs.simpleEnv.simpleEnv\ method)',\ 'arch_gym.envs.simpleEnv.simpleEnv.step',\ '',\ None]">
                    <desc classes="py method" desctype="method" domain="py" nocontentsentry="False" noindex="False" noindexentry="False" objtype="method">
                        <desc_signature _toc_name="simpleEnv.step()" _toc_parts="arch_gym.envs.simpleEnv simpleEnv step" class="simpleEnv" classes="sig sig-object py sig sig-object" fullname="simpleEnv.step" ids="arch_gym.envs.simpleEnv.simpleEnv.step" module="arch_gym.envs.simpleEnv">
                            <desc_name classes="sig-name descname sig-name descname" xml:space="preserve">
                                step
                            <desc_parameterlist xml:space="preserve">
                                <desc_parameter xml:space="preserve">
                                    <desc_sig_name classes="n n">
                                        action
                        <desc_content>
                            <paragraph>
                                Step function for the environment
        <section ids="arch-gym-envs-sniperenv-wrapper-module" names="arch_gym.envs.sniperenv_wrapper\ module">
            <title>
                arch_gym.envs.sniperenv_wrapper module
        <section ids="arch-gym-envs-test-randomparameterenv-module" names="arch_gym.envs.test_randomparameterenv\ module">
            <title>
                arch_gym.envs.test_RandomParameterEnv module
        <section ids="arch-gym-envs-timeloop-acme-wrapper-module" names="arch_gym.envs.timeloop_acme_wrapper\ module">
            <title>
                arch_gym.envs.timeloop_acme_wrapper module
        <section ids="arch-gym-envs-timeloop-acme-wrapper-rl-module" names="arch_gym.envs.timeloop_acme_wrapper_rl\ module">
            <title>
                arch_gym.envs.timeloop_acme_wrapper_rl module
        <section ids="module-arch_gym.envs module-contents" names="module\ contents">
            <title>
                Module contents
            <index entries="['pair',\ 'module;\ arch_gym.envs',\ 'module-arch_gym.envs',\ '',\ None]">
